1. El script cuenta la cantidad de subdirectorios existentes en todos los directorios presentes en el directorio enviado por parametro. Luego, crea una lista, la ordena con cierto orden e imprime los primeros X candidatos, siendo X el segundo parametro pasado al script. 
El script recibe 2 parametros: un directorio y un numero entero
4. Las funciones funcA, funcB y funcC se deberian llamar validar help, error y validarParametros respectivamente
5. Agregaria la validacion del segundo parametro para verificar que sea un numero entero. Ademas, le pasaria el parametro que contiene el directorio a funcB de la siguiente manera: funcB $2. Por otro lado, ante cualquier error en los parametros correspondiente al uso del script, deberia llamar a funcA para explicar dicho uso. Por ultimo, tanto funcA como funcB deberian finalizar con 'exit 1'.
6. La variable $# nos brinda la cantidad de parametros que le fueron pasadas al script.
	$1...${10} : parametros enviados
	$@ o $* : lista de parametros enviados
	$$ : PID del proceso
	$! : PID del ultimo proceso hijo ejecutado en 2do plano
	$? : valor de ejecucion del ultimo comando
7.
'Comillas simples': se utilizan para prevenir que bash interprete cualquier caracter especial dentro de las comillas. En otras palabras, se preserva el valor literal de cada caracter entre comillas. Ejemplo:
$ echo : 'Cualquier $ caracter que se pase aqui \ se mostrara 'literalmente' $'
Salida: Cualquier $ caracter que se pase aqui \ se mostrara 'literalmente' $

"Comillas dobles": tambien preservan el valor literal de cada caracter entre comillas, pero permiten la interpretacion de caracteres especiales como $, `` o \. Ejemplo:
$ var=pepe
$ "Contenido \" de var es: $var"
Salida: Contenido " de var es: pepe
 
`Comillas invertidas`: forzan la ejecucion de los comandos dentro de las comillas. Luego de su ejecucion, la salida de los comandos reemplaza al contenido entre comillas, incluyendo a las mismas. 
Ejemplo: 
$ today=`date '+%A, %B %d, %Y'`
$ echo $today 
Salida: Lunes, Septiembre 06, 2021
8. Si el script es ejecutado sin ningun parametro, se llamara a funcB, la cual devolvera un mensaje de error.

